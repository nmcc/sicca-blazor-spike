@page "/monitoring/accesschannel/{id:int}"
@using SICCA.Web.Spike.Services;
@implements IDisposable

<PluginBase>
    <PluginContent>
        <h1>Access channel @Id</h1>
        <p> Direction = @PluginStateService?.GetAccessChannelState(Id)?.Direction</p>
    </PluginContent>
    <PluginActions>
        <h3>Access control actions</h3>
        <p> This would contain the channel details.</p>
    </PluginActions>
</PluginBase>

@code {
    [Parameter] public int Id { get; set; }

    [Inject] PluginStateService? PluginStateService { get; set; }

    protected override void OnInitialized()
    {
        if (PluginStateService is null) throw new ArgumentNullException(nameof(PluginStateService));

        PluginStateService.StateUpdated += RefreshUI;
        base.OnInitialized();
    }

    void RefreshUI(object? sender, EventArgs eventArgs)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        if (PluginStateService is not null)
        {
            PluginStateService.StateUpdated -= RefreshUI;
        }
    }
}
