@page "/monitoring/accesschannel/{id:int}"
@using SICCA.Web.Spike.Services;
@implements IDisposable

<PluginTemplate>
    <PluginContent>
        <h1>Canal de acesso @Id</h1>
        <p> Direcção: @PluginStateService?.GetAccessChannelState(Id)?.Direction</p>
        <p> Modo: @PluginStateService?.GetAccessChannelState(Id)?.Mode</p>
    </PluginContent>
    <PluginActions>
        <div class="pagetitle">
            <h3>Acções do canal</h3>
        </div>
        <ul>
            <li>Sentido de validação</li>
            <li>Modo</li>
            <li>Operação</li>
            <li>Segurança</li>
        </ul>
    </PluginActions>
</PluginTemplate>

@code {
    [Parameter] public int Id { get; set; }

    [Inject] PluginStateService? PluginStateService { get; set; }

    protected override void OnInitialized()
    {
        if (PluginStateService is null) throw new ArgumentNullException(nameof(PluginStateService));

        PluginStateService.StateUpdated += RefreshUI;
        base.OnInitialized();
    }

    void RefreshUI(object? sender, EventArgs eventArgs)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        if (PluginStateService is not null)
        {
            PluginStateService.StateUpdated -= RefreshUI;
        }
    }
}
